@model Centroid.Models.ProfileRegisterViewModel
@{
    ViewBag.Title = "StartApply";
}
<section class="section secPadding clearfix" data-animation-effect="fadeIn">
    <div class="container">
        @if (ViewBag.JobId != null)
        {
            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <p>Write your email address along with password to create new profile.</p>
                    <p>Or if already have a profile @Html.ActionLink("Click Here", "Login", new { jobId = ViewBag.JobId }) to Login.</p>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.Hidden("JobId", (int?)ViewBag.JobId)
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-2">
                            @Html.ActionLink("Cancel", "Job", "Careers", null, htmlAttributes: new { @class = "btn btn-secondary" })
                        </div>
                        <div class="col-md-5">
                            <input type="submit" value="SignUp" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <p>Write your email address along with password to create new profile.</p>
                    <p>Or if already have a profile @Html.ActionLink("Click Here", "Login", new { jobId = ViewBag.JobId }) to Login.</p>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.Hidden("JobId", (int?)ViewBag.JobId)
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-2">
                            @Html.ActionLink("Cancel", "Job", "Careers", null, htmlAttributes: new { @class = "btn btn-secondary" })
                        </div>
                        <div class="col-md-5">
                            <input type="submit" value="SignUp" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }
        }

    </div>
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}