@model Centroid.Models.ServiceDetails
<section class="section pclear secPadding">
    <div class="container">
        @using (Html.BeginForm("Edit", "ServiceDetails", null, FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>ServiceDetails</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control-file", type = "file", name = "Image", id = "fileUpload" } })
                        <img width="50" height="50" src="@Url.Content(Model.Image)" />
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "List")
        </div>
    </div>
</section>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            @Scripts.Render("~/bundles/tinymce")
            <script type="text/javascript">
                tinymce.init({
                    selector: 'textarea',
                    width: 1000,
                    plugins: "lists, media, spellchecker, image, code",
                    toolbar: "numlist bullist media spellchecker image code",
                    base_url: '/Scripts/tinymce'
                });
            </script>
        }
